name: build

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Server needs to be built for both linux and windows, to allow Proton/Wine users to use natively
  server-build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            system: linux
            serverext: ""
            archive_type: "tar"
            archive_ext: "tar.zst"
          - os: windows-latest
            system: windows
            serverext: ".exe"
            archive_type: "zip"
            archive_ext: "zip"

    env:
      ARCHIVE_FILE: server-${{github.ref_name}}.${{ matrix.archive_ext}}
        
    steps:
    - uses: actions/checkout@v4
    - name: Init client files
      working-directory: ${{ github.workspace }}/client
      run: npm install
    - name: Lint Rust
      run: cargo clippy -- -D warnings
#    - name: Lint Typescript
#      working-directory: ${{ github.workspace }}/client
#      run: npm run lint
    - name: Build Rust
      run: cargo build --verbose --release
    - name: Build Typescript
      working-directory: ${{ github.workspace }}/client
      run: npm run build
    - name: Package Server
      if: startsWith(github.event.ref, 'refs/tags/')
      run: scripts/package-server.sh "target/release/cp2077-gpsserver${{ matrix.serverext }}" "$ARCHIVE_FILE"  "${{ matrix.archive_type }}"
    - name: Release
      if: startsWith(github.event.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: dist/${{ env.ARCHIVE_FILE }}

  # Mod only needs to be built for Windows, to match the game
  mod-build:
    runs-on: windows-latest

    env:
      ARCHIVE_FILE: gpsmod-${{github.ref_name}}.zip

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Configure CMake
      run: >
        cmake -G Ninja
        -S ./mod
        -B ${{github.workspace}}/build
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_CXX_COMPILER=cl
        -DCMAKE_C_COMPILER=cl
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Release
    - name: Package Mod
      if: startsWith(github.event.ref, 'refs/tags/')
      run: scripts/package-mod.sh "${{ github.workspace }}/build/src/gpsserver.dll" "$ARCHIVE_FILE"
    - name: Release
      if: startsWith(github.event.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: dist/${{ env.ARCHIVE_FILE }}
